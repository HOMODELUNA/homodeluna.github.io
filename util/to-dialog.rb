DEFAULT_SOURCE = <<-SRC
		
とある勉強好く月の民 12/10/2023 7:54:04 PM

我还没设计那个世界的物理规则
如果要照抄现实，直接对译原子和分子也太无聊了

Fielcode 菲尔兰语 12/10/2023 7:56:02 PM

！物理规则都要重新设计

Fielcode 菲尔兰语 12/10/2023 7:56:09 PM

干脆搞成mc世界（不是）

とある勉強好く月の民 12/10/2023 7:57:23 PM

最近看到了一个游戏，hyperbolica
一言以蔽之，这个世界处在一个四维世界的三维双曲面上

这个很有名啊

我前段时间还在想要怎么建它的坐标系

とある勉強好く月の民 12/10/2023 7:57:54 PM

比起欧式世界，这个世界真是大得可怕

Fielcode 菲尔兰语 12/10/2023 7:58:02 PM

方寸之间，深不见底。

とある勉強好く月の民 12/10/2023 7:59:07 PM

作者没能建立坐标系，他用的是一个拐弯序列来描述坐标
如“左前前右前右”

Fielcode 菲尔兰语 12/10/2023 7:59:20 PM

我之前有看一个双曲空间视频，我以为看到的是天花板，谁知往上是无限延伸的管道

Fielcode 菲尔兰语 12/10/2023 7:59:34 PM

也不一定是管道，说不定侧面我以为的墙壁也是无限延伸的呢

とある勉強好く月の民 12/10/2023 8:00:31 PM

并且，欧式空间的圆，其面积是半径平方的线性。
但是在双曲世界，圆的大小是半径的指数极

Fielcode 菲尔兰语 12/10/2023 8:00:37 PM

如果是使用庞加莱圆盘 能更深切地体会到这句话

Fielcode 菲尔兰语 12/10/2023 8:00:59 PM

靠近圆边界的那一个窄带，是无限的空间

とある勉強好く月の民 12/10/2023 8:02:04 PM

我觉得既然这个穆连文明都设计在cs上，那么这个物理规律，及其产生的世界，应该便于其中的生物发现数学规律，早早地应用计算科学

とある勉強好く月の民 12/10/2023 8:02:37 PM

首当其冲的，就是要让生物能在脑内进行简单运算

Fielcode 菲尔兰语 12/10/2023 8:03:33 PM

是100%的面积

Fielcode 菲尔兰语 12/10/2023 8:03:47 PM

因为中间你看得到的是有限的，实际面积是无限的

とある勉強好く月の民 12/10/2023 8:04:30 PM

最开始的想法是，将世界设计成一些节点构成的图，节点内部有独立的规则，而节点间有传送门(边)相连

とある勉強好く月の民 12/10/2023 8:05:14 PM

这种想法太平凡了，我觉得

とある勉強好く月の民 12/10/2023 8:06:20 PM

所以后来我想让这个图变得动态一些，创建顶点和边都不是特别昂贵，开启一个箱庭的成本几乎就是买房的成本

とある勉強好く月の民 12/10/2023 8:06:40 PM

而节点可以挂靠(mount)在任意一个其他节点上

Fielcode 菲尔兰语 12/10/2023 8:08:24 PM

买房......

Fielcode 菲尔兰语 12/10/2023 8:10:34 PM

对了，我觉得规则要保证一些东西守恒，至少不能让人刷物品

とある勉強好く月の民 12/10/2023 8:10:42 PM

在三次元，建造房屋其实已经很便宜了

Fielcode 菲尔兰语 12/10/2023 8:12:18 PM

比如质能守恒保证了我们这个宇宙没法刷物品

とある勉強好く月の民 12/10/2023 8:12:18 PM

所以需要使空间或者能量设定一个守恒关系

Fielcode 菲尔兰语 12/10/2023 8:13:12 PM

造永动机也算一种形式的刷

とある勉強好く月の民 12/10/2023 8:14:00 PM

以太坊有一个有趣的概念gas，用来描述一个计算的
复杂度和昂贵程度.
只要在以太坊上执行，同样的运算消耗gas是一样的

とある勉強好く月の民 12/10/2023 8:17:48 PM

为此，我们可以设计一个机制，让人可以产生或使用gas，
比如奴役一个人，强迫其进行特定的计算，来爆gas，这个gas又可以被用在其他的方面，如更改世界(存储)，创造算法，等等

とある勉強好く月の民 12/10/2023 8:19:50 PM

正如地球的大多数能源来自于太阳一样，穆连世界的gas来自于空间本身，只要人生活在空间中，他就能缓慢获得gas(有上限)。而不被人记录(引用计数)的空间最后呢会被回收(Garbage Collect)

Fielcode 菲尔兰语 12/10/2023 8:19:46 PM

怎么这个世界也有资本主义啊（悲）
とある勉強好く月の民 12/10/2023 8:20:38 PM

我想到的是比资本主义更往后的社会，为了达到这一未来，他们必须经历资本主义。

Fielcode 菲尔兰语 12/10/2023 8:21:28 PM
这个gas应该要比人的电力便宜吧

Fielcode 菲尔兰语 12/10/2023 8:21:40 PM
就是说他们达到同等算力应该更容易

とある勉強好く月の民 12/10/2023 8:23:19 PM

我想的是，人本身就可以消耗gas进行计算，好像是把计算托付给大自然一样

人比gas贵，因为人难以被凭理性合成出来。

Fielcode 菲尔兰语 12/10/2023 8:24:28 PM

那他们还要不要造计算机之类的

とある勉強好く月の民 12/10/2023 8:25:24 PM

也许不用特意造，大自然本身就是计算机，而它自己的计算机可能是为了执行一些隔离性的工作，如同我们开虚拟机一样

とある勉強好く月の民 12/10/2023 8:26:43 PM

对他们而言，debug的一种方法就是直接切入程序的世界，把计算机的空间mount到现实的一个点，就可以进去了

Fielcode 菲尔兰语 12/10/2023 8:27:36 PM

cool！

とある勉強好く月の民 12/10/2023 8:29:38 PM

而一些特定的空间，如果经过了设计和修整，就可以居住了。你打开sai，和unity，设计了一个像是小屋一样的地图，这就是一个空间的原型(class)。然后消耗一定gas使其实例化，就可以住进去
SRC

Speech = Struct.new("Speech",:name,:lines)

# @param lines [ String[] ]
# @return [Speech[]]
def dialog_from_lines(lines)
  lines.each_with_object([]) do |l,already|
    next if l.empty?
    if m = l.match(%r<(.+) \d+/\d+/\d+>)
      who  = m[1]
      already << Speech.new(who,[])
    else
      next if already.empty?
      already.last.lines << l
    end
  end
end

# d = dialog_from_lines(DEFAULT_SOURCE.lines.each{_1.chomp!}).each do |sp|
#   puts sp.name
#   puts ""
#   puts sp.lines
#   puts ""
# end
# @param dialog <Speech[]>
def en_side(dialog,left_name = "とある勉強好く月の民")
  dialog.map do |d|
    if d.name == left_name
      [d,:left]
    else
      [d,:right]
    end
  end
end

src = readlines.each {_1.chomp!}
dialog = dialog_from_lines(src)

en_side(dialog).each do |(sp,dir)|
  case dir
  when :left
    puts "> #{sp.name}\n\n"
  when :right
    puts "> #{sp.name}\n\n"
    #puts "> <div style=\"float: right\">#{sp.name}</div>\n\n"
  end
  sp.lines.each{puts _1;puts ""}
end

